#+TITLE: Building a Homelab with KVM and Kubernetes
#+SUBTITLE: An overview
#+AUTHOR: Zakaria.K 
#+EMAIL: 4.kebairia@gmail.com 
#+DATE: 06 April 2023 
#+KEYWORDS: blog,kvm,linux,kubernetes,haproxy,keepalived,homelab
#+STARTUP: show2levels indent hidestars
#+OPTIONS: html5-fancy:t tex:t
#+begin_date
Date: {{{date}}}
#+end_date

#+begin_comment
 =02:5A:41:4B:49:<IP>=
If you are new to Linux servers,
#+end_comment
* Introduction


I'm planning to build a homelab for the purpose of learning and experimenting. This lab will utilize containers and, if necessary, virtual machines (VMs). It will serve as a personal playground where I can explore and test various technologies.

The main reason for building this homelab is to help me test and learn new technologies that I'm interested in, as well as the ones that I need for work. 

To achieve this objective, I have identified the following needs:



- I need a fast and efficient method for provisioning new virtual machines.
  For that, I created a tool called [[https://www.github.com/kebairia/kvmcli][kvmcli]]. I designed this tool to simplify the process of creating and deploying new VMs by utilizing a user-friendly YAML file that describes the entire cluster. With just a few options selected, I can effortlessly generate a complete and robust cluster, ready for experimentation.
- To centralize the configuration as much as possible, I will be using Packer to create my VMs and Ansible for configuration management.
  The ultimate goal is to create a disposable and replaceable ephemeral sandboxes that allow for seamless experimentation.
- Kubernetes will play a prominent role in the homelab, serving as a fundamental component.\\
  A significant portion of the services I require will be based on Kubernetes.


* COMMENT Tools and technologies
Each node will have SELinux in enforcing mode.

Firewalld will also be enabled on all the nodes to provide an additional layer of network security.

The two admin nodes will serve as the main DNS and DHCP servers for the entire homelab, and we will use HAProxy and Keepalived to provide high availability for the control plane nodes.

To provide storage for the cluster, we will dedicate another node as an NFS server. This node will also be utilized as a log server, helping to centralize all the logs in one location for easier management and troubleshooting.

To make the process of provisioning new nodes easier, I will create custom base images for Ubuntu server and RockyLinux using Packer. These images will include essential configurations like (SSH, network settings, users...etc) making it easier to provision new nodes in the future.

* Architecture
For a quick summary of the cluster details, please refer to the table below.


| Name    | Hostname        | IP Address | RAM (MB) | CPUs | Software                    |
|---------+-----------------+------------+----------+------+-----------------------------|
| admin1  | admin1.hl.test  |  10.10.0.2 |     1024 |    1 | DNS/DHCP/HAProxy/Keepalived |
| admin2  | admin2.hl.test  |  10.10.0.3 |     1024 |    1 | DNS/DHCP/HAProxy/Keepalived |
|---------+-----------------+------------+----------+------+-----------------------------|
| storage | storage.hl.test | 10.10.0.10 |     1024 |    1 | NFS / Log server            |
|---------+-----------------+------------+----------+------+-----------------------------|
| monitor | monitor.hl.test | 10.10.0.11 |     1024 |    1 | Prometheus/Grafana          |
|---------+-----------------+------------+----------+------+-----------------------------|
| master1 | master1.hl.test | 10.10.0.21 |     2048 |    2 |                             |
| master2 | master2.hl.test | 10.10.0.22 |     2048 |    2 | Kubernetes                  |
| master3 | master3.hl.test | 10.10.0.23 |     2048 |    2 |                             |
|---------+-----------------+------------+----------+------+-----------------------------|
| worker1 | worker1.hl.test | 10.10.0.31 |     2048 |    2 |                             |
| worker2 | worker2.hl.test | 10.10.0.32 |     2048 |    2 | Kubernetes                  |
| worker3 | worker3.hl.test | 10.10.0.33 |     2048 |    2 |                             |
|---------+-----------------+------------+----------+------+-----------------------------|


Here's the homelab diagram for our setup.

#+begin_rightnote 
These are the *admin nodes*, one serving as the master node =IP: 10.10.0.2= and the other as the slave node =IP: 10.10.0.3=.\\
Both nodes are equipped with *DNS*, *DHCP*, *HAProxy* and *Keepalived* services installed and configured, which ensures continuous service availability and failover capabilities.\\
The nodes are configured with a =virtual IP: 10.10.0.20=, which provides a single IP address to contact with.\\
\\
\\
My *Kubernetes cluster* will consist of 6 Nodes in total 3 of these nodes will act as Master nodes =10.10.0.21-23=.\\
While the other 3 as worker nodes =10.10.0.31-33=.
#+end_rightnote

#+attr_html: :width 630 
#+caption: Homelab diagram
[[file:img/blogs/homelab/overview/arch.png]]


This was an overview of my homelab plan. In the following blog posts I will provide detailed setup and configuration guides for each component of the homelab.
#+begin_note
I will be keeping the list of blog posts below up-to-date with each new article related to this homelab that I publish on my blog.
#+end_note
* VM Setup Guides
This was an overview of my homelab plan. The links below provide detailed setup and configuration guides for each component of the homelab.
- Admins
  - [[file:2023-04-11-building-qemu-kvm-images-with-packer-(part-I).org][Building Qemu-Kvm Images With Packer (Part I) -- RockyLinux9]]
  - [[file:2023-04-14-configure-dns-servers-with-failover-using-bind.org][Configure DNS servers with failover using BIND]]
- Kubernetes
